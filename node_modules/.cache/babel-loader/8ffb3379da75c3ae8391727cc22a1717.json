{"ast":null,"code":"var midimessage = require('midimessage');\n\nmodule.exports = function (player) {\n  /**\n  * Connect a player to a midi input\n  *\n  * The options accepts:\n  *\n  * - channel: the channel to listen to. Listen to all channels by default.\n  *\n  * @param {MIDIInput} input\n  * @param {Object} options - (Optional)\n  * @return {SamplePlayer} the player\n  * @example\n  * var piano = player(...)\n  * window.navigator.requestMIDIAccess().then(function (midiAccess) {\n  *   midiAccess.inputs.forEach(function (midiInput) {\n  *     piano.listenToMidi(midiInput)\n  *   })\n  * })\n  */\n  player.listenToMidi = function (input, options) {\n    var started = {};\n    var opts = options || {};\n\n    var gain = opts.gain || function (vel) {\n      return vel / 127;\n    };\n\n    input.onmidimessage = function (msg) {\n      var mm = msg.messageType ? msg : midimessage(msg);\n\n      if (mm.messageType === 'noteon' && mm.velocity === 0) {\n        mm.messageType = 'noteoff';\n      }\n\n      if (opts.channel && mm.channel !== opts.channel) return;\n\n      switch (mm.messageType) {\n        case 'noteon':\n          started[mm.key] = player.play(mm.key, 0, {\n            gain: gain(mm.velocity)\n          });\n          break;\n\n        case 'noteoff':\n          if (started[mm.key]) {\n            started[mm.key].stop();\n            delete started[mm.key];\n          }\n\n          break;\n      }\n    };\n\n    return player;\n  };\n\n  return player;\n};","map":null,"metadata":{},"sourceType":"script"}