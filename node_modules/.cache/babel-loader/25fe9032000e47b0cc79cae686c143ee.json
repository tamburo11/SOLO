{"ast":null,"code":"module.exports = function (player) {\n  /**\n   * Adds a listener of an event\n   * @chainable\n   * @param {String} event - the event name\n   * @param {Function} callback - the event handler\n   * @return {SamplePlayer} the player\n   * @example\n   * player.on('start', function(time, note) {\n   *   console.log(time, note)\n   * })\n   */\n  player.on = function (event, cb) {\n    if (arguments.length === 1 && typeof event === 'function') return player.on('event', event);\n    var prop = 'on' + event;\n    var old = player[prop];\n    player[prop] = old ? chain(old, cb) : cb;\n    return player;\n  };\n\n  return player;\n};\n\nfunction chain(fn1, fn2) {\n  return function (a, b, c, d) {\n    fn1(a, b, c, d);\n    fn2(a, b, c, d);\n  };\n}","map":null,"metadata":{},"sourceType":"script"}