{"ast":null,"code":"import _classCallCheck from \"/Users/MS/Desktop/Projects/mySolo/SOLO/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/MS/Desktop/Projects/mySolo/SOLO/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/MS/Desktop/Projects/mySolo/SOLO/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/MS/Desktop/Projects/mySolo/SOLO/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/MS/Desktop/Projects/mySolo/SOLO/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/MS/Desktop/Projects/mySolo/SOLO/src/components/solution/Solution.js\";\nimport React from 'react';\nimport NoteGuess from './NoteGuess/NoteGuess';\nimport classNames from 'classnames';\nimport './Solution.css';\nvar distances = [2];\n\nvar Solution =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Solution, _React$Component);\n\n  function Solution(props) {\n    var _this;\n\n    _classCallCheck(this, Solution);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Solution).call(this, props));\n\n    _this.handleClick = function (event) {\n      if (parseInt(event.path[0].id) < 9 && parseInt(event.path[0].id) >= 0) {\n        _this.setState({\n          activeComponent: parseInt(event.path[0].id)\n        });\n      }\n    };\n\n    _this.handleKeyPress = function (event) {\n      if (event.key == 'ArrowLeft') {\n        if (_this.state.activeComponent > 0) {\n          _this.setState({\n            activeComponent: _this.state.activeComponent - 1\n          });\n        }\n      } else if (event.key == 'ArrowRight') {\n        if (_this.state.activeComponent < _this.props.song.length - 1) {\n          _this.setState({\n            activeComponent: _this.state.activeComponent + 1\n          });\n        }\n      }\n\n      ;\n    };\n\n    _this.state = {\n      activeComponent: 0\n    };\n    return _this;\n  }\n\n  _createClass(Solution, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"keydown\", this.handleKeyPress);\n      window.addEventListener(\"click\", this.handleClick);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"keydown\", this.handleKeyPress);\n      window.removeEventListener(\"click\", this.handleClick);\n    }\n  }, {\n    key: \"arraysEqual\",\n    value: function arraysEqual(arr1, arr2) {\n      if (arr1.length !== arr2.length) return false;\n\n      for (var i = arr1.length; i--;) {\n        if (arr1[i] !== arr2[i]) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var notes = [];\n      this.props.song.map(function (item) {\n        notes.push(item[0]);\n      });\n      var dist = [];\n\n      for (var i = 0; i < notes.length - 1; i++) {\n        if ((-notes[i] + notes[i + 1]) % 12 == 0) {\n          if (-notes[i] + notes[i + 1] > 0) {\n            dist.push(12);\n          } else {\n            dist.push(-12);\n          }\n        } else {\n          dist.push((-notes[i] + notes[i + 1]) % 12);\n        }\n      } // console.log(dist)\n\n\n      if (!this.arraysEqual(distances, dist)) {\n        distances = dist; // console.log(distances);\n      }\n\n      return React.createElement(\"form\", {\n        id: \"solutions\",\n        className: \"divDisplay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, dist.map(function (term, index) {\n        return React.createElement(NoteGuess, {\n          id: index,\n          key: index,\n          selected: _this2.state.activeComponent === index ? 1 : 0,\n          answer: term,\n          isPlayng: _this2.props.isPlayng,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return Solution;\n}(React.Component);\n\nexport default Solution;","map":{"version":3,"sources":["/Users/MS/Desktop/Projects/mySolo/SOLO/src/components/solution/Solution.js"],"names":["React","NoteGuess","classNames","distances","Solution","props","handleClick","event","parseInt","path","id","setState","activeComponent","handleKeyPress","key","state","song","length","window","addEventListener","removeEventListener","arr1","arr2","i","notes","map","item","push","dist","arraysEqual","term","index","isPlayng","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NoteGuess from './NoteGuess/NoteGuess';\nimport classNames from 'classnames';\nimport './Solution.css';\n\n\nvar distances = [2];\n\nclass Solution extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      activeComponent: 0\n    }\n  }\n\n  handleClick = (event) => {\n    if (parseInt(event.path[0].id) < 9 && parseInt(event.path[0].id) >= 0){\n      this.setState({\n          activeComponent : parseInt(event.path[0].id)\n        });\n    }\n    \n  }\n\n  handleKeyPress = (event) => {\n    if (event.key == 'ArrowLeft') {\n      if (this.state.activeComponent > 0){\n        this.setState({\n          activeComponent : this.state.activeComponent - 1\n        });\n      }\n    }\n    else if (event.key == 'ArrowRight') {\n      if (this.state.activeComponent < this.props.song.length-1){\n        this.setState({\n          activeComponent : this.state.activeComponent + 1\n        });\n      }\n    };\n  } \n\n  componentDidMount(){\n    window.addEventListener(\"keydown\", this.handleKeyPress);\n    window.addEventListener(\"click\", this.handleClick);\n  }\n\n\n  componentWillUnmount(){\n    window.removeEventListener(\"keydown\", this.handleKeyPress);\n    window.removeEventListener(\"click\", this.handleClick);\n  }\n\n  arraysEqual(arr1, arr2) {\n    if(arr1.length !== arr2.length)\n        return false;\n    for(var i = arr1.length; i--;) {\n        if(arr1[i] !== arr2[i])\n            return false;\n    }\n\n    return true;\n}\n\n  render() {\n    var notes = [];\n    this.props.song.map((item) => {\n      notes.push(item[0]);\n    });\n    var dist = [];\n    for (var i = 0; i < notes.length - 1; i++) {\n      if ((-notes[i]+notes[i+1])%12==0) {\n        if (-notes[i]+notes[i+1]>0){\n          dist.push(12)\n        } else {\n          dist.push(-12)\n        }\n        \n      } else {\n        dist.push((-notes[i]+notes[i+1])%12)\n      }\n    }\n    // console.log(dist)\n    if (!this.arraysEqual(distances,dist)) {\n      distances = dist;\n      // console.log(distances);\n    }    \n\n    \n    return (\n      \n      <form id = \"solutions\" className = \"divDisplay\">\n        {\n          dist.map((term,index) => {\n            return <NoteGuess \n            id={index}\n            key={index}\n            selected = { this.state.activeComponent === index ?  1 : 0}\n            answer = {term} \n            isPlayng = {this.props.isPlayng}\n            />\n          })\n        }\n        \n      </form>\n      );\n  }\n}\n\nexport default Solution;"]},"metadata":{},"sourceType":"module"}