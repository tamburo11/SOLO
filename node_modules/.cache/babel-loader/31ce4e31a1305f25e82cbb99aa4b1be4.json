{"ast":null,"code":"/* global XMLHttpRequest */\n'use strict';\n/**\n * Given a url and a return type, returns a promise to the content of the url\n * Basically it wraps a XMLHttpRequest into a Promise\n *\n * @param {String} url\n * @param {String} type - can be 'text' or 'arraybuffer'\n * @return {Promise}\n */\n\nmodule.exports = function (url, type) {\n  return new Promise(function (done, reject) {\n    var req = new XMLHttpRequest();\n    if (type) req.responseType = type;\n    req.open('GET', url);\n\n    req.onload = function () {\n      req.status === 200 ? done(req.response) : reject(Error(req.statusText));\n    };\n\n    req.onerror = function () {\n      reject(Error('Network Error'));\n    };\n\n    req.send();\n  });\n};","map":null,"metadata":{},"sourceType":"script"}