{"ast":null,"code":"(function (e) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = e();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], e);\n  } else {\n    var t;\n\n    if (typeof window !== \"undefined\") {\n      t = window;\n    } else if (typeof global !== \"undefined\") {\n      t = global;\n    } else if (typeof self !== \"undefined\") {\n      t = self;\n    } else {\n      t = this;\n    }\n\n    t.midimessage = e();\n  }\n})(function () {\n  var e, t, s;\n  return function o(e, t, s) {\n    function a(n, i) {\n      if (!t[n]) {\n        if (!e[n]) {\n          var l = typeof require == \"function\" && require;\n          if (!i && l) return l(n, !0);\n          if (r) return r(n, !0);\n          var h = new Error(\"Cannot find module '\" + n + \"'\");\n          throw h.code = \"MODULE_NOT_FOUND\", h;\n        }\n\n        var c = t[n] = {\n          exports: {}\n        };\n        e[n][0].call(c.exports, function (t) {\n          var s = e[n][1][t];\n          return a(s ? s : t);\n        }, c, c.exports, o, e, t, s);\n      }\n\n      return t[n].exports;\n    }\n\n    var r = typeof require == \"function\" && require;\n\n    for (var n = 0; n < s.length; n++) {\n      a(s[n]);\n    }\n\n    return a;\n  }({\n    1: [function (e, t, s) {\n      \"use strict\";\n\n      Object.defineProperty(s, \"__esModule\", {\n        value: true\n      });\n\n      s[\"default\"] = function (e) {\n        function t(e) {\n          this._event = e;\n          this._data = e.data;\n          this.receivedTime = e.receivedTime;\n\n          if (this._data && this._data.length < 2) {\n            console.warn(\"Illegal MIDI message of length\", this._data.length);\n            return;\n          }\n\n          this._messageCode = e.data[0] & 240;\n          this.channel = e.data[0] & 15;\n\n          switch (this._messageCode) {\n            case 128:\n              this.messageType = \"noteoff\";\n              this.key = e.data[1] & 127;\n              this.velocity = e.data[2] & 127;\n              break;\n\n            case 144:\n              this.messageType = \"noteon\";\n              this.key = e.data[1] & 127;\n              this.velocity = e.data[2] & 127;\n              break;\n\n            case 160:\n              this.messageType = \"keypressure\";\n              this.key = e.data[1] & 127;\n              this.pressure = e.data[2] & 127;\n              break;\n\n            case 176:\n              this.messageType = \"controlchange\";\n              this.controllerNumber = e.data[1] & 127;\n              this.controllerValue = e.data[2] & 127;\n\n              if (this.controllerNumber === 120 && this.controllerValue === 0) {\n                this.channelModeMessage = \"allsoundoff\";\n              } else if (this.controllerNumber === 121) {\n                this.channelModeMessage = \"resetallcontrollers\";\n              } else if (this.controllerNumber === 122) {\n                if (this.controllerValue === 0) {\n                  this.channelModeMessage = \"localcontroloff\";\n                } else {\n                  this.channelModeMessage = \"localcontrolon\";\n                }\n              } else if (this.controllerNumber === 123 && this.controllerValue === 0) {\n                this.channelModeMessage = \"allnotesoff\";\n              } else if (this.controllerNumber === 124 && this.controllerValue === 0) {\n                this.channelModeMessage = \"omnimodeoff\";\n              } else if (this.controllerNumber === 125 && this.controllerValue === 0) {\n                this.channelModeMessage = \"omnimodeon\";\n              } else if (this.controllerNumber === 126) {\n                this.channelModeMessage = \"monomodeon\";\n              } else if (this.controllerNumber === 127) {\n                this.channelModeMessage = \"polymodeon\";\n              }\n\n              break;\n\n            case 192:\n              this.messageType = \"programchange\";\n              this.program = e.data[1];\n              break;\n\n            case 208:\n              this.messageType = \"channelpressure\";\n              this.pressure = e.data[1] & 127;\n              break;\n\n            case 224:\n              this.messageType = \"pitchbendchange\";\n              var t = e.data[2] & 127;\n              var s = e.data[1] & 127;\n              this.pitchBend = (t << 8) + s;\n              break;\n          }\n        }\n\n        return new t(e);\n      };\n\n      t.exports = s[\"default\"];\n    }, {}]\n  }, {}, [1])(1);\n});","map":null,"metadata":{},"sourceType":"script"}